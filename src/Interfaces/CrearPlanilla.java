/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import static Conexion.Conexion.con;
import static Conexion.Conexion.conectar;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrador
 */
public class CrearPlanilla extends javax.swing.JFrame {

    /**
     * Creates new form CrearPlanilla
     */
    public CrearPlanilla() {
        initComponents();
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setResizable(false);
        DateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
        Calendar fechahoy = Calendar.getInstance();
        Dimension size = txtPeriodo.getCalendarPreferredSize();
        size.width += 90;
        txtPeriodo.setCalendarPreferredSize(size);
        txtPeriodo.setText(formatoFecha.format(fechahoy.getTime()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtPeriodo = new datechooser.beans.DateChooserCombo();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(152, 190, 211));

        jPanel1.setBackground(new java.awt.Color(117, 60, 17));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPeriodo.setLocale(new java.util.Locale("es", "SV", ""));
        jPanel1.add(txtPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 93, 176, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Descripci√≥n:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 48, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Periodo");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 98, -1, -1));

        txtDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionActionPerformed(evt);
            }
        });
        jPanel1.add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 46, 311, -1));

        btnCancelar.setBackground(new java.awt.Color(255, 0, 0));
        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 150, -1, -1));

        btnGuardar.setBackground(new java.awt.Color(117, 60, 17));
        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, -1, -1));

        jLabel1.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nueva planilla");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 13, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cafee.jpg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 190));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Planilla2 plan = new Planilla2();
        plan.setVisible(true);
        

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        try
        {
            String descripcion = txtDescripcion.getText();
            DateFormat dffrom = new SimpleDateFormat("dd-MM-YY");
            DateFormat dfto = new SimpleDateFormat("yyyy-MM-dd");
            Date today;
            today = dffrom.parse(txtPeriodo.getText());
            String fecha = dfto.format(today);

            conectar();
            String sql = "INSERT INTO planilla (descripcion, periodoplanilla, estatus) VALUES (?, ?, ?)";
            java.sql.PreparedStatement insertarPla = con.prepareStatement(sql);
            insertarPla.setString(1, descripcion);
            insertarPla.setString(2, fecha);
            insertarPla.setBoolean(3, false);
            insertarPla.execute();

            int ultimoIdPlanilla = 0;
            String sqlId = "SELECT MAX(idplanilla) AS maxid FROM planilla";
            Statement ulid = con.createStatement();
            ResultSet resultado = ulid.executeQuery(sqlId);
            while (resultado.next())
            {
                ultimoIdPlanilla = resultado.getInt("maxid");
            }

            String detplasql = "INSERT INTO `sic`.`detalleplanilla`(`idplanilla`,`idempleado`,`aguinaldo`,`vacacion`,`ISSS`,`AFP`,`Devengado`,`Total`,`FactorRecargo`,`FactorRecargoIneficiencia`,`GastoPorIneficiencia`)VALUES(?,?,?,?,?,?,?,?,?,?,?);";
            String empleados = "SELECT `IDEMPLEADO`,`NOMBREEMPRESA`,`NOMBREEMPLEADO`,`SALARIO`,`EFICIENCIA`,`ANIOS`,`DeptoProduccion` FROM `sic`.`empleado`;";

            Statement empl = con.createStatement();
            ResultSet res = empl.executeQuery(empleados);
            Double aguinaldo, vacacion, isss, afp, devengado,
            factorRecargo, factorRecargoInef, gastoPorInef, salarioMensual,
            salarioCalculoGI, total;

            while (res.next())//Iterar por todos los empleados para crear los detalles de planilla
            {
                java.sql.PreparedStatement ppst = con.prepareStatement(detplasql);
                ppst.setInt(1, ultimoIdPlanilla);
                ppst.setInt(2, res.getInt("IDEMPLEADO"));
                salarioMensual = res.getDouble("SALARIO");
                aguinaldo = Aguinaldo(salarioMensual, res.getInt("ANIOS"));
                vacacion = Vacaciones(salarioMensual, res.getInt("ANIOS"));
                isss = PrestacionISSS(salarioMensual);
                afp = PrestacionAFP(salarioMensual);
                //salario, int idEmpleado, String fechaFin, Boolean departamentoProduccion
                devengado = SalarioDevengado(salarioMensual, res.getInt("IDEMPLEADO"), fecha, res.getBoolean("DeptoProduccion"));
                salarioCalculoGI = salarioMensual + aguinaldo + vacacion + isss + afp;
                total = devengado + aguinaldo + vacacion + isss + afp;
                factorRecargo = FactorRecargo(salarioMensual, salarioCalculoGI);
                factorRecargoInef = FactorRIneficiencia(salarioMensual, salarioCalculoGI, res.getDouble("EFICIENCIA"));
                gastoPorInef = GastoPorIneficiencia(factorRecargo, factorRecargoInef);

                //aguinaldo
                //vacacion
                //ISSS
                //AFP
                //Devengado
                //Total
                //FactorRecargo, FactorRecargoIneficiencia, GastoPorIneficiencia
                ppst.setDouble(3, aguinaldo);
                ppst.setDouble(4, vacacion);
                ppst.setDouble(5, isss);
                ppst.setDouble(6, afp);
                ppst.setDouble(7, devengado);
                ppst.setDouble(8, total);
                ppst.setDouble(9, factorRecargo);
                ppst.setDouble(10, factorRecargoInef);
                ppst.setDouble(11, gastoPorInef);

                ppst.execute();
            }

            JOptionPane.showMessageDialog(this, "Planilla creada satisfactoriamente");

            this.setVisible(false);
            Planilla2 plan = new Planilla2();
            plan.setVisible(true);
        }

        catch (SQLException e) {
            e.printStackTrace();
        } catch (ParseException ex) {
            Logger.getLogger(OrdenFab_ManoObra.class.getName()).log(Level.SEVERE, "No se pudo convertir el valor de fecha", ex);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearPlanilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearPlanilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearPlanilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearPlanilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearPlanilla().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtDescripcion;
    private datechooser.beans.DateChooserCombo txtPeriodo;
    // End of variables declaration//GEN-END:variables

    public Double SalarioDevengado(Double salario, int idEmpleado, String fechaFin, Boolean departamentoProduccion){
        double sal;
        double sdia;
        double salDev;
        if (!departamentoProduccion)
        {
            sal=salario;
            sdia = sal/30;
            salDev = (sdia*7)/5.5;
        }
        else
        {
            salDev = 0;
            try
            {
                String fechaIni;
                String sql = "SELECT SUM(`monto`) AS monto FROM `sic`.`orden_manoobra` WHERE `idempleado` = ? AND `fecha` BETWEEN ? AND ?;";
                java.sql.PreparedStatement summonto = con.prepareStatement(sql);
                
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                Calendar c = Calendar.getInstance();
                c.setTime(sdf.parse(fechaFin));
                c.add(Calendar.DATE, -7);  // number of days to add
                fechaIni = sdf.format(c.getTime());
                summonto.setInt(1, idEmpleado);
                summonto.setString(2, fechaIni);
                summonto.setString(3, fechaFin);
                
                ResultSet rs = summonto.executeQuery();
                while (rs.next())
                {
                    salDev = rs.getDouble("monto");
                }
            }
            catch (SQLException e) {
                e.printStackTrace();
            }
            catch (ParseException ex) {
                Logger.getLogger(OrdenFab_ManoObra.class.getName()).log(Level.SEVERE, "No se pudo convertir el valor de fecha", ex);
            }
        }   
        return salDev;          
    }
     
    public Double PrestacionISSS(Double salario){
        double sal;
        double sdia;
        double Cotizacion;
         
        sal=salario;
        sdia = sal/30;
        Cotizacion = (sdia*7)*0.075;
        return Cotizacion;          
    }
    
    public Double PrestacionAFP(Double salario){
        double sal;
        double sdia;
        double Cotizacion;
         
        sal=salario;
        sdia = sal/30;
        Cotizacion = (sdia*7)*0.0675;
        return Cotizacion;          
    }
     
    public Double Aguinaldo(Double salario, int anio){
        double sdia;
        int diasA;
        Double aguinaldo;
         
        sdia=salario/30;
         
        if ( anio > 10){
                diasA=21;
        }
        else{
                if( anio > 3){
                    diasA=19;
                }
                else {
                    if( anio >= 1){
                        diasA=15;
                    }
                    else{
                        diasA=0;
                    }
                }
        }
        aguinaldo=(diasA*sdia)/52.0;
                
        return aguinaldo;          
    }
    
    public Double Vacaciones(Double salario, int anio){
        double sdia;
        Double vacac=0.0;
         
        sdia=salario/30;
        if(anio>=1){
                vacac=((sdia*15)+(0.30*(sdia*15))+(0.1525*(sdia*15)))/52.0;
        }         
        return vacac;          
    }
    
    public Double FactorRecargo(Double SalarioMensual, Double TotalCalculado)
    {
        return TotalCalculado / SalarioMensual;
    }
    
    public Double FactorRIneficiencia(Double SalarioMensual, Double TotalCalculado, Double Eficiencia)
    {
        if (Eficiencia > 0)
            return TotalCalculado / Eficiencia / SalarioMensual;
        else return FactorRecargo(SalarioMensual, TotalCalculado);
    }
    
    public Double GastoPorIneficiencia(Double factorRecargo, Double factorRIneficiencia)
    {
        return factorRIneficiencia - factorRecargo;
    }
}
